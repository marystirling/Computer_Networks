// Author: Aniruddha Gokhale, Vanderbilt University
// Created: Sept 2021 for Distributed Systems course
// Modified: Fall 2022 for Computer Networking course
//
// IDL schema for the data type we will be transferring

// For our assignment, we will be defining some application-level
// message formats, just like HTTP has GET, PUT, POST etc. 
//
// We have to define a namespace under which this schema gets
// translated to the programming language we are using.
// Let us call it CustomAppProto

namespace proto.health_proto;

// define the user-defined type that we want to serialize
// This can be arbitrarily complex. Here we show a sample
// which is not overly complex but still showcases the features
//
// In your case this structure will be whatever is the data structure
// that holds the information that the producer will send to consumer

// The data structure is defined using the keyword table as shown. The
// variable name  is my choice.  Individual fields of the data structure
// use the form <variable name: data type>. Note, this can be nested, and
// there could be multiple such data structures defined.

enum Dispenser_Status: int {
	OPTIMAL = 0,
	PARTIAL = 1,
	BLOCKAGE = 2
}


enum Status: int {
	GOOD = 0,
	BAD = 1
}

struct Contents
{
	dispenser: Dispenser_Status;
	icemaker: int;
	lightbulb: Status;
	fridge_temp: int;
	freezer_temp: int;
	sensor_status: Status;
	capacity_full: int;
}

table Message
{
	type: int;
	contents: Contents;
}

root_type Message;
